import { useState } from "react";
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  CartesianGrid,
  ResponsiveContainer,
} from "recharts";
import downArrow from "../../../assets/svgs/downarrgrey.svg";

const VulnerabilityChart = () => {
  const departments = ["Finance", "Human Resources", "Telecommunication"];
  const years = ["2021", "2022", "2023", "2024"];

  const [selectedYear, setSelectedYear] = useState("Year");
  const [selectedDept, setSelectedDept] = useState("Dept");
  const [isYearDropdownOpen, setIsYearDropdownOpen] = useState(false);
  const [isDeptDropdownOpen, setIsDeptDropdownOpen] = useState(false);

  const handleYearMouseEnter = () => setIsYearDropdownOpen(true);
  const handleYearMouseLeave = () => setIsYearDropdownOpen(false);

  const handleDeptMouseEnter = () => setIsDeptDropdownOpen(true);
  const handleDeptMouseLeave = () => setIsDeptDropdownOpen(false);

  const handleYearSelect = (year: string) => {
    setSelectedYear(year);
    setIsYearDropdownOpen(false);
  };

  const handleDeptSelect = (dept: string) => {
    setSelectedDept(dept);
    setIsDeptDropdownOpen(false);
  };

  const data = [
    { month: "Jan", currentRisk: 65 },
    { month: "Feb", currentRisk: 62 },
    { month: "Mar", currentRisk: 70 },
    { month: "Apr", currentRisk: 78 },
    { month: "May", currentRisk: 60 },
    { month: "Jun", currentRisk: 80 },
    { month: "Jul", currentRisk: 85 },
    { month: "Aug", currentRisk: 70 },
    { month: "Sep", currentRisk: 77 },
    { month: "Oct", currentRisk: 80 },
    { month: "Nov", currentRisk: 85 },
    { month: "Dec", currentRisk: 90 },
  ];

  const chartData = data.map((item) => ({
    month: item.month,
    currentRisk: item.currentRisk,
    remaining: 100 - item.currentRisk, // Fill the remaining space to 100%
  }));

  // Fixed ticks for the Y-axis from 0 to 100
  const ticks = [0, 20, 40, 60, 80, 100];

  // Custom tooltip component
  const CustomTooltip = ({ active, payload }) => {
    if (active && payload && payload.length) {
      const { currentRisk } = payload[0];
      return (
        <div className="custom-tooltip">
          <p>{currentRisk}%</p>
        </div>
      );
    }

    return null;
  };

  return (
    <div className="p-8 w-[65%] shadow-[5px_5px_40px_rgba(107,151,255,0.3)]">
      <div className="flex justify-between">
        <h1>Vulnerability by Department</h1>
        <div className="flex gap-8">
          {/* Year Dropdown */}
          <div
            className="relative border border-neutrals200 w-fit py-2 px-2 rounded-lg flex gap-4 cursor-pointer"
            onMouseEnter={handleYearMouseEnter}
            onMouseLeave={handleYearMouseLeave}
          >
            <h1>{selectedYear}</h1>
            <img src={downArrow} alt="Down Arrow" />
            <div
              className={`absolute bg-white border border-gray-200 mt-8 rounded-lg shadow-lg z-10 transition-opacity duration-300 ${
                isYearDropdownOpen
                  ? "opacity-100 visible"
                  : "opacity-0 invisible"
              }`}
            >
              {years.map((year, index) => (
                <div
                  key={index}
                  className="py-2 px-4 hover:bg-gray-100 cursor-pointer"
                  onClick={() => handleYearSelect(year)}
                >
                  {year}
                </div>
              ))}
            </div>
          </div>

          {/* Department Dropdown */}
          <div
            className="relative border border-neutrals200 w-fit py-2 px-2 rounded-lg flex gap-4 cursor-pointer"
            onMouseEnter={handleDeptMouseEnter}
            onMouseLeave={handleDeptMouseLeave}
          >
            <h1>{selectedDept}</h1>
            <img src={downArrow} alt="Down Arrow" />
            <div
              className={`absolute bg-white border border-gray-200 mt-8 -right-[35px] rounded-lg shadow-lg z-10 transition-opacity duration-300 ${
                isDeptDropdownOpen
                  ? "opacity-100 visible"
                  : "opacity-0 invisible"
              }`}
            >
              {departments.map((dept, index) => (
                <div
                  key={index}
                  className="py-2 px-4 hover:bg-gray-100 cursor-pointer"
                  onClick={() => handleDeptSelect(dept)}
                >
                  {dept}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
      {/* Bar chart */}
      <div style={{ width: "100%", height: "300px" }}>
        <ResponsiveContainer width="100%" height="100%">
          <BarChart
            data={chartData}
            margin={{
              top: 20,
              right: 30,
              left: 20,
              bottom: 5,
            }}
          >
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="month" />
            <YAxis domain={[0, 100]} ticks={ticks} />
            <Tooltip />
            {/* Bar for Remaining Space to 100 */}
            {/* Bar for Current Risk */}
            <Bar
              dataKey="currentRisk"
              stackId="a"
              fill="#8979FF"
              barSize={18}
              // label={{
              //   position: "top",
              //   offset: 5,
              //   fill: "",
              //   fontSize: 12,
              //   fontWeight: "bold",
              //   formatter: (value) => `${value}%`,
              //   style: { zIndex: 1001 },
              // }}
            />
            <Tooltip content={<CustomTooltip />} />
            <Bar dataKey="remaining" stackId="a" fill="#D4D5FF" />
          </BarChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
};

export default VulnerabilityChart;
